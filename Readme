# 📄 Resume Screening with Machine Learning

This project automates the process of **resume screening** using Natural Language Processing (NLP) and Machine Learning. It classifies resumes based on predefined job roles, skills, or eligibility, saving recruiters significant time and effort.

---

## 🚀 Key Features

- 🔍 **Automated Resume Classification**: Classifies resumes into predefined categories (e.g., Data Scientist, Web Developer).
- 🧠 **Machine Learning Models**: Trained models using algorithms like Logistic Regression, Naive Bayes, and Random Forest.
- 🧾 **Text Processing with NLP**: Tokenization, stopword removal, TF-IDF vectorization.
- 📊 **Model Evaluation**: Accuracy, Precision, Recall, F1-Score, and Confusion Matrix.
- 🌐 **Web Interface (Streamlit)**: Simple UI for uploading resumes and seeing predictions.
- 🗂️ **PDF Parsing**: Automatically extracts text from `.pdf` resumes using libraries like `PyPDF2` or `pdfminer.six`.

---

## 🗃️ Dataset

- Custom-built or scraped dataset of labeled resumes (PDF or TXT format).
- Labels include job roles such as:
  - `Data Scientist`
  - `Software Engineer`
  - `Business Analyst`
  - `DevOps Engineer`, etc.

---

## 🏗️ Project Structure

📁 resume-screening/
│
├── data/ # Resume files and processed text
├── models/ # Saved ML models (.pkl files)
├── src/ # Core logic
│ ├── pdf_parser.py # Resume PDF parsing
│ ├── text_preprocessing.py # NLP cleaning and vectorization
│ ├── model_training.py # Training logic
│ └── prediction.py # Inference and prediction logic
├── app/ # Streamlit frontend
│ └── app.py
├── requirements.txt
├── Dockerfile # For containerization
└── README.md

yaml
Copy
Edit

---

## 🧪 Evaluation Metrics

- ✅ Accuracy
- 🔁 Precision, Recall
- 🎯 F1-Score
- 📉 Confusion Matrix

---

## 🧰 Tech Stack

- 🐍 Python
- 📚 Scikit-learn, Pandas, NumPy
- 📝 NLTK / spaCy for NLP
- 📄 PyPDF2 / pdfminer.six for PDF parsing
- 🌐 Streamlit for Web UI
- 🐳 Docker for deployment

---

## 🖥️ How to Use

### 1️⃣ Install Dependencies

```bash
pip install -r requirements.txt
2️⃣ Train the Model
bash
Copy
Edit
python src/model_training.py
3️⃣ Run the Streamlit App
bash
Copy
Edit
streamlit run app/app.py
